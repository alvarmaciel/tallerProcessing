* Clase 1 <2012-05-16 mié>
** Presentación de Processing
*** Qué  es 
- Lenguaje
  - Multiplataforma
  - Multidestino
  - GPL, LGPL ¿Puedo licenciar sólo como GPL mi producción?
  - Para artes visuales
    Se inició como un lenguaje para enseñar a programar a gente de artes visuales
- IDE (Interfaz de desarrollo)
- Comunidad
*** ...Entonces?
- Img / video algoritmico y generativo
- Instalaciones interactivas
- Visualización de datos
- Diseño/arquitectura paramétrics
- +++
*** Porqué Programar
- Una ventaja es poder superar las trabas de las herramientas digitales, poder generar tus propias herramientas.
- Cuando uno conoce lo que hay abajo, se vuelve mejor usuario.
** Desde 0/0
- En principio... cambiaremos estados en los pixeles
- Tipos de datos
  - float // Flotante
  - Int // Entero
  - boolean // Boleno
  - char // Caracter
  - string // cadena de caracteres
- Variables: Declaración e inicalizar
  - float var;//declarar un flotante
    - var = 0.0; // incialización
    - float var = 0.0; // Declaración e inicialización
  - boolean vf = true;
  - char c = 'A';
  - string texto = "lalala"
*** Primeros pasos
- programa 1
#+BEGIN_SRC java
  float num1;
  float num2;
  float resultado;
  num1=3;
  num2=2;
  resultado=(num1+num2+PI+75)*2;
  println(resultado);// función de impresión en consola
#+END_src
- Función = bloque de código al que se le  puede pasar parámetros
- Programa 2
#+BEGIN_SRC java
    int x=15;
    line(x,0,100,100);
    rect (x,0,20,50);
    ellipse (x,50,30,50);
#+END_src
- Funciones
#+BEGIN_SRC java
  void setup(){ //Función que se ejecuta una vez
  print("setup"); 
    }
  void draw (){// Función que se ejecuta permanetemente
  print("draw");   
    }
#+END_src
- Las variables tienen alcances de declaración, si son de uso general del programa las declaramos afuera de las funciones.
**** función KeyPressed es llamada cada vez que presionamos una tecla
- SACAR UN SNAPSHOT DE NUESTRA PRODUCCIÓN
#+BEGIN_SRC java
void KeyPressed(){
  if (key=='s'){
     saveFrame("dibujo.png");
  }
}
#+END_src
**** Rampa de colores
#+BEGIN_SRC java
boolean sube;
if(sube > true)
color++
else{
color--
if (c>255) sube=false;
if (c<255) sube=true;
#+END_src

** Avances :P
A partir del tuto de http://processing.org/learning/gettingstarted/ combiné el programa que mandaron de ejemplo con el de la página
#+BEGIN_src java
//declaramos variables:
boolean activo;

void setup() {
  size(800, 450);
  activo=false;
  background (184,184,184);
}
 


void draw() {
  if (activo==true && mouseButton == LEFT) { //Cuando aprieto el botón izquierdo dibujo un circulo negro con bordes blancos
    fill(0);
    stroke(255);
    ellipse(mouseX, mouseY, 80, 80);
  }
  
  if (activo==true && mouseButton==RIGHT) { //Cuando aprieto el botón derecho dibujo un circulo blanco con bordes negros
    fill(255);
    stroke (0);
    ellipse(mouseX, mouseY, 80, 80);
}
}

void keyPressed() { 
  if (key==' ') { // Si apreto espacio reescribo el background, osea borro lo que hice
    background(184,184,184); 
  }
  if (key=='s' || key=='S'){ // Si apreto s o S grabo el dibujo 
    saveFrame("ejemplo-####.png");
  }
}

void mousePressed() { // Si apreto el Mouse la variable "activo" pasa a true y en el drow se dibuja la elipse
  activo=true;
}
void mouseReleased() { // Si suelto el Mouse la variable "activo" pasa a false y se deja de dibujar la elipse
  activo=false;
}

#+END_src
