                                curso
                                =====

Author: Alvar Maciel
Date: 2012-05-20 15:25:12 ART


Table of Contents
=================
1 Clase 1 <2012-05-16 mié>
    1.1 Presentación de Processing
        1.1.1 Qué  es
        1.1.2 ...Entonces?
        1.1.3 Porqué Programar
    1.2 Desde 0/0
        1.2.1 Primeros pasos


1 Clase 1 <2012-05-16 mié> 
---------------------------

1.1 Presentación de Processing 
===============================

1.1.1 Qué  es 
~~~~~~~~~~~~~~
- Lenguaje
  - Multiplataforma
  - Multidestino
  - GPL, LGPL ¿Puedo licenciar sólo como GPL mi producción?
  - Para artes visuales
    Se inició como un lenguaje para enseñar a programar a gente de artes visuales
- IDE (Interfaz de desarrollo)
- Comunidad

1.1.2 ...Entonces? 
~~~~~~~~~~~~~~~~~~~
- Img / video algoritmico y generativo
- Instalaciones interactivas
- Visualización de datos
- Diseño/arquitectura paramétrics
- +++

1.1.3 Porqué Programar 
~~~~~~~~~~~~~~~~~~~~~~~
- Una ventaja es poder superar las trabas de las herramientas digitales, poder generar tus propias herramientas.
- Cuando uno conoce lo que hay abajo, se vuelve mejor usuario.

1.2 Desde 0/0 
==============
- En pricipio... cambiaremos estados en los pixeles
- Tipos de datos
  - float // Flotante
  - Int // Entero
  - boolean // Boleno
  - char // Caracter
  - string // caddena de caracteres
- Comentarios
  - //
  - /* sasdasda */
- Variables: Declaración e inicalizar
  - float var;//declarar un flotante
    - var = 0.0; // incialización
    - float var = 0.0; // Declaración e inicialización
  - boolean vf = true;
  - char c = 'A';
  - string texto = "lalala"

1.2.1 Primeros pasos 
~~~~~~~~~~~~~~~~~~~~~
- programa 1
  float num1;
  float num2;
  float resultado;
  num1=3;
  num2=2;
  resultado=(num1+num2+PI+75)*2;
  println(resultado);// función de impresión en consola
- Función = bloque de código al que se le  puede pasar parámetros
- Programa 2
    int x=15;
    line(x,0,100,100);
    rect (x,0,20,50);
    ellipse (x,50,30,50);
- Funciones
  void setup(){ //Función que se ejecuta una vez
  print("setup"); 
    }
  void draw (){// Función que se ejecuta permanetemente
  print("draw");   
    }
- Las variables tienen alcances de declaración, si son de uso general del programa las declaramos afuera de las funciones.
* función KeyPressed es llamada cada vez que presionamos una tecla 
  - SACAR UN SNAPSHOT DE NUESTRA PRODUCCIÓN
  void KeyPressed(){
    if (key=='s'){
       saveFrame("dibujo.png");
    }
  }
* Rampa de colores 
  boolean sube;
  if(sube)
  ++
  else{
  c--
  
  if (c>255) sube=false
  if (c<255) sube=true
